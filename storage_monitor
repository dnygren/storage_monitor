#!/bin/bash
################################################################################
# storage_monitor : Monitor mass storage and report when over threshold
#
# BSD 0-clause license, "Zero Clause BSD", SPDX: 0BSD
# Copyright (C) 2019 by Daniel C. Nygren <dan.nygren@alumni.clemson.edu>
#
# Current Implementation By: Dan Nygren
# Email: dan.nygren@gmail.com
# Permanent Email: Dan.Nygren@alumni.clemson.edu
# Original Concept: Vivek Gite
# https://www.cyberciti.biz/tips/shell-script-to-watch-the-disk-space.html
#
#   A shell script to monitor the disk space. It will create a warning message
# if the (free available) percentage of space is greater than or equal to the
# ALERT_PERCENTAGE.
#
# CALLING SEQUENCE  storage_monitor
#
# EXAMPLES          storage_monitor
# <time> <host> storage_monitor: WARNING usage of partition "/" at 80%.
#
# TARGET SYSTEM     Linux
#
# DEVELOPED USING   Linux
#
# CALLS             (Change these paths if necessary)
AWK=/usr/bin/gawk
CUT=/usr/bin/cut
DATE=/bin/date
BASENAME=/usr/bin/basename
HOSTNAME=/bin/hostname
LOGGER=/usr/bin/logger
DF=/bin/df
SED=/bin/sed
GREP=/bin/grep
#
# CALLED BY         Usually cron, but also can be called on the command line
#
# INPUTS            ALERT_PERCENTAGE, EXCLUDE_LIST
#
# OUTPUTS           Warning message to stdout (echo) and system log (logger)
#                   if usage greater than or equal to ALERT_PERCENTAGE. If
#                   called by cron, and a mail transfer agent (MTA) is present,
#                   an email containing the warning message will be sent to a
#                   recipient as configured in the MTA.
#
# RETURNS           Returns true if script completes
#
# ERROR HANDLING    No error handling
#
# WARNINGS          If run via cron, only the logger output will be saved. If
#                   stdout is also wanted, the user should configure an MTA or
#                   redirect stdout appropriately via a crontab entry.
#                   (2. Describe anything a maintainer should be aware of)
#                   (N. Describe anything a maintainer should be aware of)
################################################################################

#set -x # Uncomment this line to turn on xtrace for debugging

# Set the percentage at and above which the operator will be alerted.
ALERT_PERCENTAGE=80

# Partition monitoring exclude list. If there is more than one partition,
# use "|" to separate the partitions.
EXCLUDE_LIST="udev|tmpfs|net|cdrom"
#EXCLUDE_LIST="" # Don't exclude anything.

# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
# ^^^^^^^^^^ Place code that may need modification above this point. ^^^^^^^^^^
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

#--- Function(s) ---

function process_df_lines() {
while read output;
do
    #echo $output # Uncomment this line for additional debug output
    used=$(echo $output | $AWK '{print $1}' | $CUT -d'%' -f1)
    partition=$(echo $output | $AWK '{print $2}')
    if [ $used -ge $ALERT_PERCENTAGE ] ; then
        date_string="$($DATE) "
        usage_string="$($BASENAME $0): \
WARNING usage of partition \"$partition\" at $used%."
        host_string="$($HOSTNAME) "
        echo $date_string$host_string$usage_string
        # Log files already have time stamps and host names, so don't add these.
        $LOGGER $usage_string
    fi
done

return
}

#--- Start Program ---

# Run the df "disk free" program without line breaks (--portability).
# Remove the first line containing field titles.
# Remove excluded partitions.
# Only print the "Use %" and "Mounted on" fields and process that output.
$DF --portability | \
$SED '1d' | \
$GREP --extended-regexp --invert-match "${EXCLUDE_LIST}" | \
$AWK '{print $5 " " $6}' | process_df_lines

exit 0  # Exit true (success) after the process_df_lines() function returns
