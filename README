storage_monitor README                                   D. Nygren  12 Dec 2019
--------------------------------------------------------------------------------

    Read the comment header block in the source code of the storage_monitor
script file for detailed information on its operation.

    storage_monitor can be called on the command line, but is usually called
periodically using a systemd timer or cron. The storage_monitor_dist.tar.xz
distribution file is only needed for systemd installations.

Building storage_monitor

- These steps are only necessary if you do not already have a
storage_monitor_dist.tar.xz distribution file or have made changes to
storage_monitor and thus need to generate a new distribution file for systemd
installations.
- Execute `make clean` to remove any existing distribution files.
$ make clean
- Execute `make dist` to create a storage_monitor_dist.tar.xz distribution
file to be installed on a target.
$ make dist
- After successfully building storage_monitor, see the instructions titled
**Installing storage_monitor for systemd**.

storage_monitor and systemd timers

- storage_monitor is distributed to targets via a compressed "dist" distribution
file.
- If you have access to a storage_monitor_dist.tar.xz file, start with the
**Installing storage_monitor** instructions.
- If you are a software developer and have made changes to the storage_monitor
source code, or do not have a dist file, follow the **Building storage_monitor
for systemd** instructions.

Installing storage_monitor for systemd

- storage_monitor is installed on a spacecraft computer referred to as the
target.
- Copy the xz compressed storage_monitor_dist.tar.xz dist file containing
storage_monitor into the target system.
- How the distribution file is copied onto the target is out of the scope of
this document but is typically done by:
 -- Downloading the dist file from a git repository to a directory on a local
computer,
 -- Navigating to the directory on the local computer where the dist file was
downloaded to (typically "Downloads"),
$ cd Downloads
$ ls -l storage_monitor_dist.tar.xz
-rw------- 1 nygren uucp 7416 Dec 11 10:47 storage_monitor_dist.tar.xz
 -- Ensure the dist file time/date indicate it is the one just
requested to be downloaded.
 -- Using the `scp` secure copy command (example below), transfer it from
the local computer to the home directory of the login on the target.
 -- $ scp storage_monitor_dist.tar.xz root@target-name:~
 -- The tilde ~ specifies to transfer the file to the home directory of the
login "root" which is usually /root. Other login's home directories may be
/home/login etc.
- Perform the installation of storage_monitor logged in on the target as the
superuser which has the login name of "root".
 -- How to login to a target is out of the scope of this document but is
typically done in a lab using the `ssh` secure shell command, an example of
which is below.
 -- $ ssh -l login-name target-name
 -- Note that the login-name you are provided may not be "root". Often remote
superuser access is not provided for security reasons.
 -- If the login-name is not root, obtain superuser permissions by executing
a bash shell using the superuser do sudo command:
$ sudo bash
# <--- Pound sign prompt indicates user logged in as root.
 -- Notice that the prompt will change in some manner to indicate root access.
 -- In the sections to follow, the root prompt will be changed to the distinct
### ROOT PRIVILEGES ### to definitively show that the user is logged in
as root.
 -- Recopy the xz compressed storage_monitor_dist.tar.xz distribution file
containing storage_monitor into an **empty** directory on the target system and
execute the tar command to uncompress and extract the distribution tar file
contents.
 -- The example below uses a directory under /tmp which will disappear after the
next power cycle or reboot.  This will not affect the operation of
storage_monitor as the distribution tar file contents will be installed into a
different directory.

### ROOT PRIVILEGES ### mkdir /tmp/storage_monitor
### ROOT PRIVILEGES ### cp storage_monitor_dist.tar.xz /tmp/storage_monitor
### ROOT PRIVILEGES ### cd /tmp/storage_monitor
### ROOT PRIVILEGES ### tar --xz -xvf storage_monitor_dist.tar.xz
GNUmakefile
README
storage_monitor
storage_monitor.service
storage_monitor.timer

### ROOT PRIVILEGES ### ls -la /tmp/storage_monitor
total 56
drwxr-xr-x  2 root  root  4096 Dec 11 17:33 .
drwxrwxrwt 11 root  root  4096 Dec 11 17:35 ..
-rw-------  1 41523 uucp  6512 Dec 11 17:33 GNUmakefile
-rw-------  1 41523 uucp 11129 Dec 11 16:05 README
-rwx------  1 41523 uucp  7886 Dec 11 17:14 storage_monitor
-rw-------  1 root  root  9304 Dec 11 17:30 storage_monitor_dist.tar.xz
-rw-------  1 41523 uucp  3504 Dec 11 17:29 storage_monitor.service
-rw-------  1 41523 uucp  2515 Dec 11 16:39 storage_monitor.timer


- To ensure a previous version of storage_monitor is not present or running on
the target via systemd, execute make uninstall to stop the storage_monitor
systemd service (if running) and remove any existing storage_monitor software.

### ROOT PRIVILEGES ### make uninstall

- When running `make uninstall` failed and error conditions are displayed:

GNUmakefile:172: recipe for target 'uninstall' failed
make: [uninstall] Error 5 (ignored)

- Conditions shown as `(ignored)` are of no consequence as this refers to a
feature that was attempted to be uninstalled that never was installed in the
first place.
- Execute `make install` to copy the storage_monitor software to where it will
reside for use on the target system.

### ROOT PRIVILEGES ### make install

Running storage_monitor

storage_monitor can be executed from the command line, systemd, or cron.

- Command line execution
 --  This is commonly done when debugging the target system.

### ROOT PRIVILEGES ### /opt/storage_monitor/storage_monitor

The above will execute storage_monitor, printng output to the terminal, which is
useful in debugging the operation of the system.

- systemd execution

 --  This is the method of automatically starting storage_monitor at certain
times.

### ROOT PRIVILEGES ### make systemd
.
.
.
*** The systemd storage_monitor.service is invoked by a systemd timer. ***
*** Therefore storage_monitor.service has no [Install] section. ***


storage_monitor and cron

- An example crontab entry for storage monitor is provided in the file named
"crontab_example".
- Edit the crontab of the target system you want to have invoke storage_monitor
periodically and add an entry for storage_monitor per the file crontab_example.
- Usually the installation of storage_monitor is performed when logged in on
the target as the superuser which has the login name of "root".

### ROOT PRIVILEGES ### crontab -e

- Using storage_monitor with cron makes it easier to have warning messages
emailed to a user. If more than just a warning message in the log is desired, a
mail transfer agent (MTA) must be configured on the system running
storage_monitor in order to receive a warning message emailed by cron.  Often an
MTA is already configured on a system. If not, below are some instructions on
how to install and configure nullmailer, a simple mail transfer agent.

=========================================
Nullmailer Installation and Configuration
=========================================

nullmailer is Copyright (C) 2018 Bruce Guenter, and may be copied according to
the GNU GENERAL PUBLIC LICENSE (GPL) Version 2 or a later version.

nygren@nygren-linux-pc:~$ sudo apt install nullmailer

---------------------------

root@nygren-linux-pc:/etc/nullmailer# ls -la
total 36
drwxr-xr-x   2 root root  4096 Aug 26 13:44 .
drwxr-xr-x 145 root root 12288 Aug 23 17:49 ..
-rw-r--r--   1 root root    16 Aug 23 18:04 adminaddr
-rw-r--r--   1 root root     9 Aug 23 17:49 defaultdomain
-rw-r--r--   1 root root     9 Aug 26 12:47 defaulthost
-rw-r--r--   1 mail mail    45 Aug 26 13:44 remotes
root@nygren-linux-pc:/etc/nullmailer# cat *
nygren@example.com
example.com
example.com
example.com
mail1.example.com

---------------------------

#!/bin/bash

# This nullmailer_test script is based on the example from
# http://troubleshooters.com/linux/nullmailer/
# Copyright (C) 2007, 2011, 2013 by Steve Litt, All rights reserved.
# Material provided as-is, use at your own risk.

# START OF USER CHANGEABLE VARIABLES
sender=nygren@example.com           ##### MUST BE YOUR EMAIL AT THE SMTP SERVER
youremail=$sender                   ##### FEEL FREE TO MAKE IT SOMETHING ELSE
                                    ##### IF YOU HAVE A SECOND EMAIL ADDRESS
#friendemail=friend@friendsdomain.com
friendemail=$sender

yourname="Dan Nygren"
friendname="Dan Nygren"
# END OF USER CHANGEABLE VARIABLES


emailfile=myemail.email
dtime=`date`
ltlt="<"
gtgt=">"

echo "Subject: Nullmailer test at $dtime" > $emailfile
echo "From: $yourname  $ltlt$sender$gtgt" >> $emailfile
echo "To: $yourname  $ltlt$youremail$gtgt" >> $emailfile
echo "Cc: $friendname $ltlt$friendemail$gtgt" >> $emailfile
echo "" >> $emailfile
echo "Sent at $dtime" >> $emailfile
echo "" >> $emailfile
echo "$yourname was here" >> $emailfile
echo "and now is gone" >> $emailfile
echo "but left his name" >> $emailfile
echo "to carry on." >> $emailfile
echo "" >> $emailfile
echo "This is a second paragraph that is kinda long, really really long, so
 long that I truly hope that it does the right thing and wraps." >> $emailfile
echo "" >> $emailfile
echo "Sincerely" >> $emailfile
echo "$yourname" >> $emailfile

cat $emailfile | nullmailer-inject -h

---------------------------

$ nullmailer_test

Return-Path: <nygren@example.com>
Delivered-To: nygren@example.com
Received: from nygren-linux-pc.example.com (unknown [10.100.93.213])
    by mail1.example.com (Postfix) with SMTP id A506562591D;
    Mon, 26 Aug 2019 14:28:24 -0700 (PDT)
Received: (nullmailer pid 5961 invoked by uid 41523);
    Mon, 26 Aug 2019 21:28:24 -0000
Subject: Nullmailer test at Mon Aug 26 14:28:24 PDT 2019
From: Dan Nygren <nygren@example.com>
To: Dan Nygren <nygren@example.com>
Cc: Dan Nygren <nygren@example.com>
Date: Mon, 26 Aug 2019 14:28:24 -0700
Message-Id: <1566854904.587998.5960.nullmailer@nygren-linux-pc.example.com>

Sent at Mon Aug 26 14:28:24 PDT 2019

Dan Nygren was here
and now is gone
but left his name
to carry on.

This is a second paragraph that is kinda long, really really long, so long
 that I truly hope that it does the right thing and wraps.

Sincerely
Dan Nygren


---------------------------

nygren@nygren-linux-pc:~$ crontab -l
53 * * * * /home/nygren/scripts/storage_monitor

---------------------------

nygren@nygren-linux-pc:~$ sudo service nullmailer restart


Return-Path: <nygren@example.com>
Delivered-To: nygren@example.com
Received: from nygren-linux-pc.example.com (unknown [10.100.93.213])
    by mail1.example.com (Postfix) with SMTP id B5CF1625370
    for <nygren@example.com>; Mon, 26 Aug 2019 13:53:01 -0700 (PDT)
Received: (nullmailer pid 2957 invoked by uid 41523);
    Mon, 26 Aug 2019 20:53:01 -0000
From: root@example.com (Cron Daemon)
To: nygren@example.com
Subject: Cron <nygren@nygren-linux-pc> /home/nygren/public_html/scripts/
storage_monitor
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
X-Cron-Env: <SHELL=/bin/sh>
X-Cron-Env: <HOME=/home/nygren>
X-Cron-Env: <PATH=/usr/bin:/bin>
X-Cron-Env: <LOGNAME=nygren>
Date: Mon, 26 Aug 2019 13:53:01 -0700
Message-Id: <1566852781.667084.2956.nullmailer@nygren-linux-pc.example.com>

Mon Aug 26 13:53:01 PDT 2019 nygren-linux-pc storage_monitor: WARNING usage of
 partition "/" at 80%.

---------------------------
